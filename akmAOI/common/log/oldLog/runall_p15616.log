[INFO]2021-03-03 16:55:06,773: log files at D:\python_lx\akm\common\log
[INFO]2021-03-03 16:55:06,773: find module agvCtrl.main_agv
[INFO]2021-03-03 16:55:06,774: find module agvDevice.main_agvDevice
[INFO]2021-03-03 16:55:06,774: find module alarm.main_alarm
[INFO]2021-03-03 16:55:06,774: find module auth.main_auth
[INFO]2021-03-03 16:55:06,774: find module button.main_button
[INFO]2021-03-03 16:55:06,774: find module door.main_door
[INFO]2021-03-03 16:55:06,775: find module elevator.main_elevator
[INFO]2021-03-03 16:55:06,775: find module virtualDoor.main_doorCtrl
[INFO]2021-03-03 16:55:06,775: import agvCtrl.main_agv
[INFO]2021-03-03 16:55:07,244: create lock <lock name:doorMgr.lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE31D6D630>>
[INFO]2021-03-03 16:55:07,246: create lock <lock name:door.lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE31D7D810>>
[INFO]2021-03-03 16:55:07,247: create lock <lock name:door.lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE31D7DA20>>
[INFO]2021-03-03 16:55:07,332: create lock <lock name:timer.lock_2191272787632,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE320A4030>>
[ERROR]2021-03-03 16:55:07,342: mqtt is disabled
[INFO]2021-03-03 16:55:07,342: mqtt: subscribe [alarm/raise/+]
[INFO]2021-03-03 16:55:07,342: mqtt: subscribe [alarm/clear/+]
[INFO]2021-03-03 16:55:10,368: Mongodb connect to 127.0.0.1 port 27017
[INFO]2021-03-03 16:55:10,415: create lock <lock name:elevatorApi.tcp_lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE32327420>>
[INFO]2021-03-03 16:55:10,416: create lock <lock name:elevatorApi.g_lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE3231FD20>>
[INFO]2021-03-03 16:55:10,417: create lock <lock name:elevatorMgr.lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE3231F180>>
[INFO]2021-03-03 16:55:10,433: create lock <lock name:agvserver,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE3237C540>>
[INFO]2021-03-03 16:55:10,710: create lock <lock name:mapMgr.lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE32341240>>
[INFO]2021-03-03 16:55:10,998: create lock <lock name:agvList.g_agvLock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE32416F00>>
[INFO]2021-03-03 16:55:11,000: create lock <lock name:taskList.lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE324D08D0>>
[INFO]2021-03-03 16:55:11,057: charge policy 0 , fix time
[INFO]2021-03-03 16:55:11,091: create lock <lock name:agvApi.g_lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE324DC4E0>>
[INFO]2021-03-03 16:55:11,495: start load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-AOI.smap
[DEBUG]2021-03-03 16:55:11,667: elevator thread start
[INFO]2021-03-03 16:55:11,686: load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-AOI.smap ,used 199 ms
[INFO]2021-03-03 16:55:11,694: start load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-DC.smap
[INFO]2021-03-03 16:55:11,750: load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-DC.smap ,used 63 ms
[INFO]2021-03-03 16:55:11,759: start load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-DDT.smap
[INFO]2021-03-03 16:55:11,829: load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-DDT.smap ,used 79 ms
[INFO]2021-03-03 16:55:11,837: start load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-FQC.smap
[DEBUG]2021-03-03 16:55:11,966: create aliveObj SK_DOOR 门控离线异常 timeout 60
[DEBUG]2021-03-03 16:55:11,966: create aliveObj vitualDoor01 门控离线异常 timeout 60
[DEBUG]2021-03-03 16:55:11,966: create aliveObj vitualDoor02 门控离线异常 timeout 60
[INFO]2021-03-03 16:55:11,990: load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-FQC.smap ,used 161 ms
[INFO]2021-03-03 16:55:12,002: start load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-LYH.smap
[INFO]2021-03-03 16:55:12,108: load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-LYH.smap ,used 118 ms
[INFO]2021-03-03 16:55:12,122: start load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-ZP.smap
[INFO]2021-03-03 16:55:12,213: load map D:\python_lx\akm\agvCtrl\projects\akm\AKM-ZP.smap ,used 105 ms
[INFO]2021-03-03 16:55:12,222: start load map D:\python_lx\akm\agvCtrl\projects\akm\office.smap
[INFO]2021-03-03 16:55:12,270: load map D:\python_lx\akm\agvCtrl\projects\akm\office.smap ,used 57 ms
[INFO]2021-03-03 16:55:12,273: import agvDevice.main_agvDevice
[INFO]2021-03-03 16:55:12,274: import alarm.main_alarm
[INFO]2021-03-03 16:55:12,274: import auth.main_auth
[INFO]2021-03-03 16:55:12,284: import button.main_button
[INFO]2021-03-03 16:55:12,288: create lock <lock name:agvApi.g_lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE329F1C00>>
[INFO]2021-03-03 16:55:12,320: import door.main_door
[INFO]2021-03-03 16:55:12,322: import elevator.main_elevator
[INFO]2021-03-03 16:55:12,322: import virtualDoor.main_doorCtrl
[INFO]2021-03-03 16:55:13,523: create lock <lock name:IOAlarm.s_lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE32A3B900>>
[DEBUG]2021-03-03 16:55:13,524: create aliveObj magneticAGV01 二维码掉线异常 timeout 120
[SUCC]2021-03-03 16:55:13,532: utility start, pid=15616, ppid=14812
[DEBUG]2021-03-03 16:55:13,535: start timer
[INFO]2021-03-03 16:55:13,543: load agv file: D:\python_lx\akm\agvCtrl/projects/akm/agv.cfg
[INFO]2021-03-03 16:55:13,543: create lock <lock name:agvList.AGV23.lock,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE3303DF00>>
[DEBUG]2021-03-03 16:55:13,545: create aliveObj AGV23 AGV离线异常 timeout 300
[INFO]2021-03-03 16:55:13,545: AGV23 start agvList run thread
[INFO]2021-03-03 16:55:13,545: create lock <lock name:agv.AGV23.lock_status,<unlocked _thread.RLock object owner=0 count=0 at 0x000001FE33057EA0>>
[INFO]2021-03-03 16:55:13,546: AGV23 start agvList run2 thread
[DEBUG]2021-03-03 16:55:13,546: try connect AGV23 192.168.20.198:19204
[WARN]2021-03-03 16:55:13,549: Local server start! version 3.8.0, path D:\python_lx\akm\common, pid 15616
[INFO]2021-03-03 16:55:13,549: add_ignore: taskStatus
[INFO]2021-03-03 16:55:17,598: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:20,614: magneticAGV01 (0, 0, 0, 0)
[ERROR]2021-03-03 16:55:23,548: connect AGV23 failed timed out
[DEBUG]2021-03-03 16:55:23,548: try connect AGV23 192.168.20.198:19204
[INFO]2021-03-03 16:55:23,626: startCharge is false
[INFO]2021-03-03 16:55:23,629: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:26,641: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:29,647: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:32,656: magneticAGV01 (0, 0, 0, 0)
[ERROR]2021-03-03 16:55:33,549: connect AGV23 failed timed out
[INFO]2021-03-03 16:55:33,549: AGV23 checkLink failed 192.168.20.198 19204
[WARN]2021-03-03 16:55:33,549: agvThread.AGV23[tid:5684] <lock name:agv.AGV23.lock_status,<locked _thread.RLock object owner=5684 count=1 at 0x000001FE33057EA0>> ,hold 20003 ms
[INFO]2021-03-03 16:55:33,550: name=agvThread.AGV23, pid=15616, tid=5684
[01] File "C:/Python38/lib/threading.py", line 870, in run() 
[02] File "D:/python_lx/akm/agvCtrl/agvList.py", line 565, in run() 
[03] File "D:/python_lx/akm/driver/seerAgv/agvCtrl.py", line 36, in checkLink() 
[04] File "D:/python_lx/akm/driver/seerAgv/agvApi.py", line 184, in checkLink() 
[05] File "D:/python_lx/akm/common/lock.py", line 102, in release() 
[06] File "D:/python_lx/akm/common/enhance.py", line 268, in getTrace() 
[07] File "D:/python_lx/akm/common/enhance.py", line 248, in getThreadStack()
[DEBUG]2021-03-03 16:55:35,551: try connect AGV23 192.168.20.198:19204
[INFO]2021-03-03 16:55:35,657: startCharge is false
[INFO]2021-03-03 16:55:35,660: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:38,666: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:41,673: magneticAGV01 (0, 0, 0, 0)
[DEBUG]2021-03-03 16:55:44,594: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[INFO]2021-03-03 16:55:44,594: open vitualDoor 127.0.0.100
[DEBUG]2021-03-03 16:55:44,594: used 1ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[INFO]2021-03-03 16:55:44,682: magneticAGV01 (0, 0, 0, 0)
[ERROR]2021-03-03 16:55:45,552: connect AGV23 failed timed out
[INFO]2021-03-03 16:55:45,552: AGV23 checkLink failed 192.168.20.198 19204
[WARN]2021-03-03 16:55:45,553: agvThread.AGV23[tid:5684] <lock name:agv.AGV23.lock_status,<locked _thread.RLock object owner=5684 count=1 at 0x000001FE33057EA0>> ,hold 10002 ms
[INFO]2021-03-03 16:55:45,555: name=agvThread.AGV23, pid=15616, tid=5684
[01] File "C:/Python38/lib/threading.py", line 870, in run() 
[02] File "D:/python_lx/akm/agvCtrl/agvList.py", line 565, in run() 
[03] File "D:/python_lx/akm/driver/seerAgv/agvCtrl.py", line 36, in checkLink() 
[04] File "D:/python_lx/akm/driver/seerAgv/agvApi.py", line 184, in checkLink() 
[05] File "D:/python_lx/akm/common/lock.py", line 102, in release() 
[06] File "D:/python_lx/akm/common/enhance.py", line 268, in getTrace() 
[07] File "D:/python_lx/akm/common/enhance.py", line 248, in getThreadStack()
[DEBUG]2021-03-03 16:55:47,557: try connect AGV23 192.168.20.198:19204
[INFO]2021-03-03 16:55:47,684: startCharge is false
[INFO]2021-03-03 16:55:47,687: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:50,694: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:53,702: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:55:56,716: magneticAGV01 (0, 0, 0, 0)
[ERROR]2021-03-03 16:55:57,557: connect AGV23 failed timed out
[INFO]2021-03-03 16:55:57,558: AGV23 checkLink failed 192.168.20.198 19204
[WARN]2021-03-03 16:55:57,558: agvThread.AGV23[tid:5684] <lock name:agv.AGV23.lock_status,<locked _thread.RLock object owner=5684 count=1 at 0x000001FE33057EA0>> ,hold 10001 ms
[INFO]2021-03-03 16:55:57,561: name=agvThread.AGV23, pid=15616, tid=5684
[01] File "C:/Python38/lib/threading.py", line 870, in run() 
[02] File "D:/python_lx/akm/agvCtrl/agvList.py", line 565, in run() 
[03] File "D:/python_lx/akm/driver/seerAgv/agvCtrl.py", line 36, in checkLink() 
[04] File "D:/python_lx/akm/driver/seerAgv/agvApi.py", line 184, in checkLink() 
[05] File "D:/python_lx/akm/common/lock.py", line 102, in release() 
[06] File "D:/python_lx/akm/common/enhance.py", line 268, in getTrace() 
[07] File "D:/python_lx/akm/common/enhance.py", line 248, in getThreadStack()
[DEBUG]2021-03-03 16:55:59,562: try connect AGV23 192.168.20.198:19204
[INFO]2021-03-03 16:55:59,719: startCharge is false
[INFO]2021-03-03 16:55:59,724: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:02,738: magneticAGV01 (1, 0, 0, 0)
[INFO]2021-03-03 16:56:03,740: magneticAGV01 try to open door 0 ['SK_DOOR'] ['vitualDoor01', 'vitualDoor02']
[INFO]2021-03-03 16:56:03,747: task [magneticAGV01] readIo get status  (1, 0, 0, 0, 0, 0, 0, 0)
[DEBUG]2021-03-03 16:56:03,748: magneticAGV01 经过门 ['SK_DOOR'] checkBeginSignal -> controlVirualDoor
[INFO]2021-03-03 16:56:04,249: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:04,250: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:04,266: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:04,283: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=19004
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:04,284: used 18ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:04,285: [return] use 35 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:04,294: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:04,294: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:05,752: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:06,295: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:06,295: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:06,307: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:06,320: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=2100
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:06,321: used 14ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:06,322: [return] use 27 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:06,330: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:06,331: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:08,332: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:08,333: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:08,346: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:08,365: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=17656
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:08,365: used 19ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:08,367: [return] use 35 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:08,376: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:08,377: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:08,762: magneticAGV01 (0, 0, 0, 0)
[ERROR]2021-03-03 16:56:09,562: connect AGV23 failed timed out
[INFO]2021-03-03 16:56:09,562: AGV23 checkLink failed 192.168.20.198 19204
[WARN]2021-03-03 16:56:09,563: agvThread.AGV23[tid:5684] <lock name:agv.AGV23.lock_status,<locked _thread.RLock object owner=5684 count=1 at 0x000001FE33057EA0>> ,hold 10001 ms
[INFO]2021-03-03 16:56:09,564: name=agvThread.AGV23, pid=15616, tid=5684
[01] File "C:/Python38/lib/threading.py", line 870, in run() 
[02] File "D:/python_lx/akm/agvCtrl/agvList.py", line 565, in run() 
[03] File "D:/python_lx/akm/driver/seerAgv/agvCtrl.py", line 36, in checkLink() 
[04] File "D:/python_lx/akm/driver/seerAgv/agvApi.py", line 184, in checkLink() 
[05] File "D:/python_lx/akm/common/lock.py", line 102, in release() 
[06] File "D:/python_lx/akm/common/enhance.py", line 268, in getTrace() 
[07] File "D:/python_lx/akm/common/enhance.py", line 248, in getThreadStack()
[INFO]2021-03-03 16:56:10,378: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:10,379: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:10,394: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:10,422: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=8864
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:10,423: used 30ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:10,427: [return] use 48 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:10,439: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:10,439: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[DEBUG]2021-03-03 16:56:11,566: try connect AGV23 192.168.20.198:19204
[INFO]2021-03-03 16:56:11,765: startCharge is false
[INFO]2021-03-03 16:56:11,770: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:12,440: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:12,440: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:12,453: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:12,469: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=17472
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:12,470: used 17ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:12,472: [return] use 32 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:12,491: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:12,492: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:14,493: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:14,493: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:14,505: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:14,512: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=17956
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:14,513: used 8ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:14,513: [return] use 20 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:14,520: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:14,520: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:14,778: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:16,525: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:16,526: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:16,529: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:16,545: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=16236
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:16,546: used 17ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:16,548: [return] use 22 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:16,561: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:16,562: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:17,786: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:18,563: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:18,563: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:18,564: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:18,571: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=13340
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:18,572: used 8ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:18,573: [return] use 10 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:18,594: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:18,595: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:20,596: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:20,596: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:20,607: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:20,615: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=7912
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:20,615: used 8ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:20,616: [return] use 20 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:20,623: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:20,623: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:20,793: magneticAGV01 (0, 0, 0, 0)
[ERROR]2021-03-03 16:56:21,568: connect AGV23 failed timed out
[INFO]2021-03-03 16:56:21,568: AGV23 checkLink failed 192.168.20.198 19204
[WARN]2021-03-03 16:56:21,568: agvThread.AGV23[tid:5684] <lock name:agv.AGV23.lock_status,<locked _thread.RLock object owner=5684 count=1 at 0x000001FE33057EA0>> ,hold 10002 ms
[INFO]2021-03-03 16:56:21,569: name=agvThread.AGV23, pid=15616, tid=5684
[01] File "C:/Python38/lib/threading.py", line 870, in run() 
[02] File "D:/python_lx/akm/agvCtrl/agvList.py", line 565, in run() 
[03] File "D:/python_lx/akm/driver/seerAgv/agvCtrl.py", line 36, in checkLink() 
[04] File "D:/python_lx/akm/driver/seerAgv/agvApi.py", line 184, in checkLink() 
[05] File "D:/python_lx/akm/common/lock.py", line 102, in release() 
[06] File "D:/python_lx/akm/common/enhance.py", line 268, in getTrace() 
[07] File "D:/python_lx/akm/common/enhance.py", line 248, in getThreadStack()
[INFO]2021-03-03 16:56:22,624: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:22,624: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:22,625: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:22,633: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=19132
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:22,633: used 8ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:22,634: [return] use 10 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:22,646: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:22,646: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[DEBUG]2021-03-03 16:56:23,570: try connect AGV23 192.168.20.198:19204
[INFO]2021-03-03 16:56:23,796: startCharge is false
[INFO]2021-03-03 16:56:23,799: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:24,647: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:24,647: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:24,650: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:24,664: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=19004
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:24,665: used 15ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:24,667: [return] use 19 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:24,681: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:24,682: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:26,684: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:26,684: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:26,687: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[CRITICAL]2021-03-03 16:56:26,702: invoke <function urlRelayopen at 0x000001FE32A3A9D0> cause a error: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=2100
Traceback (most recent call last):
  File "D:\python_lx\akm\common\scadaUtility.py", line 45, in __call
    ret = func(*p,**pp)
  File "D:\python_lx\akm\door\main_door.py", line 16, in urlRelayopen
    switchInfo.open()
  File "D:\python_lx\akm\door\switchMgr.py", line 138, in open
    vitualDoor.vitualDoorOpen(self.ip)
  File "D:\python_lx\akm\door\vitualDoor.py", line 47, in vitualDoorOpen
    g_swichList[ip].open()
  File "D:\python_lx\akm\door\vitualDoor.py", line 126, in open
    raise "%s虚拟门被锁"%self.swichId
TypeError: exceptions must derive from BaseException

[DEBUG]2021-03-03 16:56:26,703: used 16ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:26,705: [return] use 21 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[CRITICAL]2021-03-03 16:56:26,720: task: [vitualDoor01] switchOpen error:  cause a error: TypeError: exceptions must derive from BaseException
pid=15616, ppid=14812, tid=18668
Traceback (most recent call last):
  File "D:\python_lx\akm\virtualDoor\doorCtrlRunTasks.py", line 326, in tryOpenDoor
    if not switchApi.switchOpen(doorID):
  File "D:\python_lx\akm\door\switchApi.py", line 27, in switchOpen
    return _switch('/api/switch/on', switchId)
  File "D:\python_lx\akm\door\switchApi.py", line 40, in _switch
    return http_get(url + apiurl, param)
  File "D:\python_lx\akm\door\switchApi.py", line 18, in http_get
    raise Exception(result["errormsg"])
Exception: TypeError: exceptions must derive from BaseException

[WARN]2021-03-03 16:56:26,720: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:26,813: magneticAGV01 (0, 0, 0, 0)
[DEBUG]2021-03-03 16:56:27,783: GET: http://127.0.0.1:8999/api/switch/off?id=vitualDoor01 addr: 127.0.0.1
[INFO]2021-03-03 16:56:27,783: close vitualDoor 127.0.0.100
[DEBUG]2021-03-03 16:56:27,783: used 0ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/off?id=vitualDoor01
[INFO]2021-03-03 16:56:28,721: try to open virual door vitualDoor01
[DEBUG]2021-03-03 16:56:28,721: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:28,722: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01 addr: 127.0.0.1
[INFO]2021-03-03 16:56:28,722: open vitualDoor 127.0.0.100
[DEBUG]2021-03-03 16:56:28,722: used 0ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[DEBUG]2021-03-03 16:56:28,723: [return] use 2 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor01
[WARN]2021-03-03 16:56:28,723: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[INFO]2021-03-03 16:56:29,824: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:30,725: try to open virual door vitualDoor02
[DEBUG]2021-03-03 16:56:30,725: send http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor02
[DEBUG]2021-03-03 16:56:30,726: GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor02 addr: 127.0.0.1
[INFO]2021-03-03 16:56:30,727: open vitualDoor 127.0.0.101
[DEBUG]2021-03-03 16:56:30,727: used 1ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=vitualDoor02
[DEBUG]2021-03-03 16:56:30,728: [return] use 3 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=vitualDoor02
[WARN]2021-03-03 16:56:30,728: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor error
[DEBUG]2021-03-03 16:56:32,729: magneticAGV01 经过门 ['SK_DOOR'] controlVirualDoor -> opendoor
[INFO]2021-03-03 16:56:32,831: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:33,230: try to open door SK_DOOR
[DEBUG]2021-03-03 16:56:33,231: send http_get: http://127.0.0.1:8999/api/switch/on?id=SK_DOOR
[DEBUG]2021-03-03 16:56:33,233: GET: http://127.0.0.1:8999/api/switch/on?id=SK_DOOR addr: 127.0.0.1
[INFO]2021-03-03 16:56:33,234: The signal to open the door has been sent,  doorIP:192.168.252.253
[DEBUG]2021-03-03 16:56:33,247: send to door module:192.168.252.253, values:outbuf[16] 55 00 00 00 00 AA 03 06 80 00 00 00 00 00 88 16
[ERROR]2021-03-03 16:56:33,572: connect AGV23 failed timed out
[INFO]2021-03-03 16:56:33,573: AGV23 checkLink failed 192.168.20.198 19204
[WARN]2021-03-03 16:56:33,573: agvThread.AGV23[tid:5684] <lock name:agv.AGV23.lock_status,<locked _thread.RLock object owner=5684 count=1 at 0x000001FE33057EA0>> ,hold 10003 ms
[INFO]2021-03-03 16:56:33,575: name=agvThread.AGV23, pid=15616, tid=5684
[01] File "C:/Python38/lib/threading.py", line 870, in run() 
[02] File "D:/python_lx/akm/agvCtrl/agvList.py", line 565, in run() 
[03] File "D:/python_lx/akm/driver/seerAgv/agvCtrl.py", line 36, in checkLink() 
[04] File "D:/python_lx/akm/driver/seerAgv/agvApi.py", line 184, in checkLink() 
[05] File "D:/python_lx/akm/common/lock.py", line 102, in release() 
[06] File "D:/python_lx/akm/common/enhance.py", line 268, in getTrace() 
[07] File "D:/python_lx/akm/common/enhance.py", line 248, in getThreadStack()
[DEBUG]2021-03-03 16:56:33,581: read from door module:192.168.252.253, values:inbuf[13] 55 00 00 00 00 AA 83 03 80 01 00 06 16
[DEBUG]2021-03-03 16:56:33,582: used 349ms 200 OK application/json;charset=utf-8, GET: http://127.0.0.1:8999/api/switch/on?id=SK_DOOR
[DEBUG]2021-03-03 16:56:33,584: [return] use 354 ms,http_get: http://127.0.0.1:8999/api/switch/on?id=SK_DOOR
[WARN]2021-03-03 16:56:33,585: magneticAGV01 经过门 ['SK_DOOR'] opendoor error
[DEBUG]2021-03-03 16:56:35,575: try connect AGV23 192.168.20.198:19204
[DEBUG]2021-03-03 16:56:35,586: magneticAGV01 经过门 ['SK_DOOR'] opendoor -> leavefirst
[INFO]2021-03-03 16:56:35,834: startCharge is false
[INFO]2021-03-03 16:56:35,839: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:37,157: task: [magneticAGV01] readDo status  (1, 0, 0, 0, 0, 0, 0, 0)
[DEBUG]2021-03-03 16:56:37,158: magneticAGV01 经过门 ['SK_DOOR'] leavefirst -> waitAlway
[INFO]2021-03-03 16:56:37,663: task [magneticAGV01] readIo get status  (0, 0, 0, 0, 0, 0, 0, 0)
[WARN]2021-03-03 16:56:37,663: magneticAGV01 经过门 ['SK_DOOR'] waitAlway error
[INFO]2021-03-03 16:56:38,847: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:39,666: task [magneticAGV01] readIo get status  (0, 0, 0, 0, 0, 0, 0, 0)
[WARN]2021-03-03 16:56:39,667: magneticAGV01 经过门 ['SK_DOOR'] waitAlway error
[INFO]2021-03-03 16:56:41,671: task [magneticAGV01] readIo get status  (0, 0, 0, 0, 0, 0, 0, 0)
[WARN]2021-03-03 16:56:41,671: magneticAGV01 经过门 ['SK_DOOR'] waitAlway error
[INFO]2021-03-03 16:56:41,857: magneticAGV01 (0, 0, 0, 0)
[INFO]2021-03-03 16:56:43,675: task [magneticAGV01] readIo get status  (0, 0, 0, 0, 0, 0, 0, 0)
[WARN]2021-03-03 16:56:43,675: magneticAGV01 经过门 ['SK_DOOR'] waitAlway error
[INFO]2021-03-03 16:56:44,872: magneticAGV01 (0, 0, 0, 0)
[ERROR]2021-03-03 16:56:45,575: connect AGV23 failed timed out
[INFO]2021-03-03 16:56:45,575: AGV23 checkLink failed 192.168.20.198 19204
[WARN]2021-03-03 16:56:45,575: agvThread.AGV23[tid:5684] <lock name:agv.AGV23.lock_status,<locked _thread.RLock object owner=5684 count=1 at 0x000001FE33057EA0>> ,hold 10000 ms
[INFO]2021-03-03 16:56:45,576: name=agvThread.AGV23, pid=15616, tid=5684
[01] File "C:/Python38/lib/threading.py", line 870, in run() 
[02] File "D:/python_lx/akm/agvCtrl/agvList.py", line 565, in run() 
[03] File "D:/python_lx/akm/driver/seerAgv/agvCtrl.py", line 36, in checkLink() 
[04] File "D:/python_lx/akm/driver/seerAgv/agvApi.py", line 184, in checkLink() 
[05] File "D:/python_lx/akm/common/lock.py", line 102, in release() 
[06] File "D:/python_lx/akm/common/enhance.py", line 268, in getTrace() 
[07] File "D:/python_lx/akm/common/enhance.py", line 248, in getThreadStack()
[INFO]2021-03-03 16:56:45,681: task [magneticAGV01] readIo get status  (0, 0, 0, 0, 0, 0, 0, 0)
[WARN]2021-03-03 16:56:45,682: magneticAGV01 经过门 ['SK_DOOR'] waitAlway error
[DEBUG]2021-03-03 16:56:47,577: try connect AGV23 192.168.20.198:19204
[INFO]2021-03-03 16:56:47,687: task [magneticAGV01] readIo get status  (0, 0, 0, 0, 0, 0, 0, 0)
[WARN]2021-03-03 16:56:47,688: magneticAGV01 经过门 ['SK_DOOR'] waitAlway error
[INFO]2021-03-03 16:56:47,874: startCharge is false
[INFO]2021-03-03 16:56:47,906: magneticAGV01 (0, 0, 0, 0)
